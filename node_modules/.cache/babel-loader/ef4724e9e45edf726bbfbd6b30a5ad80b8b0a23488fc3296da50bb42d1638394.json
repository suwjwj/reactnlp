{"ast":null,"code":"var _jsxFileName = \"/home/devbox/project/src/components/ParticlesBackground.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport Particles from 'react-particles';\nimport { loadSlim } from 'tsparticles-slim';\nimport { useTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesBackground = () => {\n  _s();\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  const particlesInit = useCallback(async engine => {\n    await loadSlim(engine);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    options: {\n      background: {\n        opacity: 0\n      },\n      fpsLimit: 60,\n      particles: {\n        color: {\n          value: isLight ? '#2D5AF0' : '#7B9AFF'\n        },\n        links: {\n          color: isLight ? '#2D5AF0' : '#7B9AFF',\n          distance: 150,\n          enable: true,\n          opacity: 0.2,\n          width: 1\n        },\n        move: {\n          enable: true,\n          random: false,\n          speed: 1,\n          straight: false,\n          outModes: {\n            default: 'bounce'\n          }\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 800\n          },\n          value: 80\n        },\n        opacity: {\n          value: 0.3\n        },\n        shape: {\n          type: 'circle'\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 3\n          }\n        }\n      },\n      detectRetina: true\n    },\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: 0,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticlesBackground, \"w7kod4ghOc9M/NccZ+SjxjrjY+M=\", false, function () {\n  return [useTheme];\n});\n_c = ParticlesBackground;\nexport default ParticlesBackground;\nvar _c;\n$RefreshReg$(_c, \"ParticlesBackground\");","map":{"version":3,"names":["useCallback","Particles","loadSlim","useTheme","jsxDEV","_jsxDEV","ParticlesBackground","_s","theme","isLight","palette","mode","particlesInit","engine","id","init","options","background","opacity","fpsLimit","particles","color","value","links","distance","enable","width","move","random","speed","straight","outModes","default","number","density","area","shape","type","size","min","max","detectRetina","style","position","top","left","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/devbox/project/src/components/ParticlesBackground.jsx"],"sourcesContent":["import { useCallback } from 'react';\nimport Particles from 'react-particles';\nimport { loadSlim } from 'tsparticles-slim';\nimport { useTheme } from '@mui/material';\n\nconst ParticlesBackground = () => {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  const particlesInit = useCallback(async engine => {\n    await loadSlim(engine);\n  }, []);\n\n  return (\n    <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      options={{\n        background: {\n          opacity: 0,\n        },\n        fpsLimit: 60,\n        particles: {\n          color: {\n            value: isLight ? '#2D5AF0' : '#7B9AFF',\n          },\n          links: {\n            color: isLight ? '#2D5AF0' : '#7B9AFF',\n            distance: 150,\n            enable: true,\n            opacity: 0.2,\n            width: 1,\n          },\n          move: {\n            enable: true,\n            random: false,\n            speed: 1,\n            straight: false,\n            outModes: {\n              default: 'bounce',\n            },\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 800,\n            },\n            value: 80,\n          },\n          opacity: {\n            value: 0.3,\n          },\n          shape: {\n            type: 'circle',\n          },\n          size: {\n            value: { min: 1, max: 3 },\n          },\n        },\n        detectRetina: true,\n      }}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 0,\n        pointerEvents: 'none',\n      }}\n    />\n  );\n};\n\nexport default ParticlesBackground; "],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACxB,MAAMM,OAAO,GAAGD,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,OAAO;EAE9C,MAAMC,aAAa,GAAGZ,WAAW,CAAC,MAAMa,MAAM,IAAI;IAChD,MAAMX,QAAQ,CAACW,MAAM,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACJ,SAAS;IACRa,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAEH,aAAc;IACpBI,OAAO,EAAE;MACPC,UAAU,EAAE;QACVC,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;QACTC,KAAK,EAAE;UACLC,KAAK,EAAEb,OAAO,GAAG,SAAS,GAAG;QAC/B,CAAC;QACDc,KAAK,EAAE;UACLF,KAAK,EAAEZ,OAAO,GAAG,SAAS,GAAG,SAAS;UACtCe,QAAQ,EAAE,GAAG;UACbC,MAAM,EAAE,IAAI;UACZP,OAAO,EAAE,GAAG;UACZQ,KAAK,EAAE;QACT,CAAC;QACDC,IAAI,EAAE;UACJF,MAAM,EAAE,IAAI;UACZG,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,CAAC;UACRC,QAAQ,EAAE,KAAK;UACfC,QAAQ,EAAE;YACRC,OAAO,EAAE;UACX;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,OAAO,EAAE;YACPT,MAAM,EAAE,IAAI;YACZU,IAAI,EAAE;UACR,CAAC;UACDb,KAAK,EAAE;QACT,CAAC;QACDJ,OAAO,EAAE;UACPI,KAAK,EAAE;QACT,CAAC;QACDc,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,IAAI,EAAE;UACJhB,KAAK,EAAE;YAAEiB,GAAG,EAAE,CAAC;YAAEC,GAAG,EAAE;UAAE;QAC1B;MACF,CAAC;MACDC,YAAY,EAAE;IAChB,CAAE;IACFC,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPnB,KAAK,EAAE,MAAM;MACboB,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE,CAAC;MACTC,aAAa,EAAE;IACjB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC7C,EAAA,CAnEID,mBAAmB;EAAA,QACTH,QAAQ;AAAA;AAAAkD,EAAA,GADlB/C,mBAAmB;AAqEzB,eAAeA,mBAAmB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}